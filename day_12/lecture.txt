Reationships:the link or bond between two or more things
Things can be  People ,objects,network, computers etc
A hierarchy is a system of organizing people into different 
ranks or levels of importance, for example in society or in a company.
              =>Mongo
                =>Database 
                   =>collections ==>Relationship between multiple elements
                      =>Documents
                        
Types of Relationships
=>1-1 Relationships =>1-1
=>1-Many Relationships=>Many-1
=>Many -Many Relationships=>Many-Many

why do we need Relationships?
   =>Masai's Database
     ==>students
     ==>instructors

     **student's documents*

     student_code
     batch
    
     
     **Employee's documents*
  
     emp_code
     subject
     exp

     =>db.students.find({location:Bangalore})
     =>db.instructors.find({location:"Bangalore})
     =>db.hr.find({location:"Bangalore})
     =>db..find({location:"Bangalore})
     user collections
     name
     dob
     email
     gender
     blood group
     location
     phone No.

1-1 Relationships

**students documents
_id:"............."==>200
student_code
batch
user_id:50

  user collections
  _id:"............."==>50
     name
     dob
     email
     gender
     blood group
     location
     phone No


 way of connection => we will connect them by the helo of ID's 
 =>1st way :Put user_id in students's Schema
 =>2nd Way :Put student_id in users Schema
1-Many Relationship

Linkedin's example
=>users
=>Posts

users=[

    {
        user_id:1
             name
             dob
             email
             gender
             blood group
             location
             dobprofession
             posts:[1,2,3,4]
    },
    
    {
        user_id:1
             name
             dob
             email
             gender
             blood group
             location
             dobprofession
             posts:[5,6,7,8]
    },
    
    {
        user_id:2
             name
             dob
             email
             gender
             blood group
             location
             dobprofession
             posts:[1,2,3,4]
    },
    
    {
        user_id:3
             name
             dob
             email
             gender
             blood group
             location
             dobprofession
             posts:[56,65,87,98,109]
    },
    
    {
        user_id:4
             name
             dob
             email
             gender
             blood group
             location
             dobprofession
             posts:[45,58,25,12]
    },
    .
    .
    .
    .
    .
    .
    1 million
]

posts=[
    {id},
    {id},
    {id}
]
A single user can have multiple posts on any social media plateform
=>user <==> Posts
1st way :Put user_id in posts
2nd way :Put post_id in user


Many-Many Relationship
  ===> Instagram  
      ==>Posts
      ==>Hashtag

         ==> A single post can have multiple hastags and a single hastag can be used on multiple posts .
         =>Posts <==>hastags
         1st way : put user_id in  hastag
         2nd Way : Put hastag_id in user
what is the best way to connect the collections ?

=> Find out which collections is dependent and which is independent 


1-1

=> Dependent : Student 
=>Independent : user
Best Way :Put user id in studen's' schema

1-Many
=> Dependent : Post 
=>Independent : user

Many -many 
=>They are interdependent

conclusion

=>The best way to form a Relationship is by putting independent's ID inside dependent inside dependent's schema.



Research work

Relationships
How we can actually implement them in code
Authentication
Authorization
Hashing the password 
Hashing vs Encryption
where can i use hashing and Encryption 
JWT (JSON Web Token)


 Relationship
A relationship is used to describe the relation between entities.
DBMS ER model concept
Types of relationship are as follows:
a. One-to-One Relationship

When only one instance of an entity is associated with the relationship,
 then it is known as one to one relationship.
For example, A female can marry to one male, and a male can marry to one female.

DBMS ER model concept
b. One-to-many relationship
When only one instance of the entity on the left, and more than one instance of an entity on
 the right associates with the relationship then this is known as a one-to-many relationship.
For example, Scientist can invent many inventions, 
but the invention is done by the only specific scientist.

DBMS ER model concept
c. Many-to-one relationship
When more than one instance of the entity on the left, and only one
 instance of an entity on the right associates with the relationship 
 then it is known as a many-to-one relationship.

For example, Student enrolls for only one course, but a course can have many students.


DBMS ER model concept
d. Many-to-many relationship


When more than one instance of the entity on the left, and more 
than one instance of an entity on the right associates with 
the relationship then it is known as a many-to-many relationship.

For example, Employee can assign by many projects and project can have many employees.
DBMS ER model concept



Advantages
The advantages of the ER model are as follows −
It is easy to create and understand.
It is very simple because if you know the relationship between attributes and entities, you can easily draw it.
It is a tool for effective communication for database designers.
It can be easily converted into a Relational model

Disadvantages
The disadvantages of the ER model are as follows −
It is not suitable for the semi-structured or unstructured data set.
It is difficult to show data manipulation.


Difference between Hashing and Encryption

// Encryption is the process of converting a normal readable message
//  known as plaintext into a garbage message or not
//   readable message known as Ciphertext. The ciphertext 
// obtained from the encryption can easily be transformed
//  into plaintext using the encryption key. Some of the 
//  examples of encryption algorithms are RSA, AES, and Blowfish.



// Hashing is the process of converting the 
// information into a key using a hash function. 
// The original information cannot be retrieved from the
//  hash key by any means. Generally, the hash keys are stored 
//  in the database and they are compared to check whether the original 
//  information matches or not. They are generally used to store the 
//  passwords for login. Some of the examples
//   of a hashing algorithm are MD5, SHA256.






 In the authentication process, the identity of users
  is checked for providing the access to the system. 
  While in the authorization process, a person’s or 
  user’s authorities are 
 checked for accessing the resources. Authentication 
 is done before the authorization process, whereas the 
 authorization process is done after the authentication 
 process.